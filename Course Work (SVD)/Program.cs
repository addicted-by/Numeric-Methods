using System;
using System.Collections.Generic;
using System.Diagnostics;
namespace Course_Work__SVD_
{
    class Program
    {
        static void Main(string[] args)
        {
            //Tensor a = new Tensor(new List<double>() { 2,2,1,1,1,2}, 3, 2);
            //Tensor b = new Tensor(new List<double>() { 2, 3 }, 2, 1);
            Tensor a = new Tensor(new List<double>() {
                10, 61, 1, 10, 84, 61, 19, 17, 13, 86, 87, 27, 59, 11, 39, 24, 70, 43, 62, 14,
                78, 33, 90, 83, 17, 25, 10, 67, 38, 18, 79, 9, 4, 94, 38, 26, 40, 25, 54, 7,
                99, 43, 93, 34, 13, 22, 17, 38, 69, 68, 91, 61, 64, 99, 59, 64, 11, 44, 72,
                19, 28, 37, 38, 37, 47, 76, 8, 91, 28, 89, 70, 14, 32, 49, 0, 7, 58, 54, 58,
                23, 42, 74, 19, 68, 97, 11, 8, 47, 41, 72, 31, 10, 61, 9, 73, 7, 7, 65, 45,
                43, 40, 99, 8, 69, 5, 57, 41, 88, 4, 86, 22, 82, 94, 51, 61, 72, 92, 39, 21,
                41, 48, 60, 17, 3, 71, 3, 2, 34, 55, 60, 78, 73, 56, 33, 22, 93, 28, 5, 59,
                60, 90, 96, 93, 14, 25, 86, 59, 43, 60, 12, 56, 22, 30, 68, 93, 83, 84, 47,
                22, 82, 62, 28, 1, 27, 86, 10, 18, 59, 44, 59, 9, 6, 76, 59, 59, 74, 64, 61,
                5, 68, 76, 46, 78, 34, 28, 1, 68, 19, 76, 76, 82, 95, 51, 32, 19, 59, 82, 99,
                21, 11, 68, 13, 22, 20, 88, 8, 50, 64, 6, 96, 77, 35, 74, 25, 54, 44, 74, 98,
                4, 2, 62, 30, 40, 84, 54, 26, 55, 29, 63, 18, 18, 5, 54, 79, 82, 35, 62, 23,
                1, 58, 83, 33, 6, 76, 91, 5, 98, 2, 80, 96, 56, 64, 43, 82, 14, 34, 2, 7, 74,
                26, 73, 43, 94, 82, 37, 33, 74, 53, 36, 42, 98, 88, 87, 66, 70, 17, 86, 41,
                59, 80, 63, 25, 18, 99, 24, 89, 36, 72, 57, 0, 48, 15, 49, 44, 15, 28, 48,
                58, 3, 77, 63, 72, 69, 50, 53, 85, 7, 11, 60, 35, 35, 44, 62, 27, 94, 26,
                6, 53, 39, 10, 95, 18, 17, 50, 46, 37, 66, 91, 19, 47, 14, 44, 47, 21, 42,
                31, 14, 90, 14, 81, 57, 94, 75, 94, 89, 97, 63, 54, 59, 68, 13, 36, 56, 82,
                83, 12, 69, 43, 2, 12, 85, 2, 97, 37, 81, 80, 89, 97, 45, 17, 39, 28, 70, 56,
                52, 39, 15, 4, 54, 79, 95, 36, 92, 1, 57, 20, 48, 15, 35, 52, 21, 67, 15, 82,
                10, 27, 44, 22, 85, 80, 33, 42, 2, 27, 19, 20, 80, 0, 45, 92, 58, 31, 33, 37,
                83, 31, 42, 13, 69, 99, 13, 99, 44, 86, 75, 54, 73, 29, 46, 60, 56, 38, 46,
                47, 38, 21, 10, 0, 67, 52, 97, 23, 41, 47, 18, 16, 43, 30, 8, 92, 44, 3, 69,
                89, 71, 3, 71, 3, 33, 66, 64, 30, 15, 11, 53, 24, 68, 87, 79, 18, 56, 39, 0,
                23, 50, 41, 2, 12, 11, 91, 34, 13, 49, 57, 2, 84, 42, 98, 17, 87, 50, 69, 6,
                54, 4, 39, 97, 32, 14, 34, 35, 22, 14, 13,12,121,11,11,123,423,54,643,32,32,35,4,6,5,123,12,43,12,67,46,75,36,34,64,53,53,33,86
}, 14, 20);
            Console.WriteLine("Matrix A:" + "\n------------------------------------------------------------\n");
            Console.WriteLine(a.ToString());
            Console.WriteLine("------------------------------------------------------------\nRank(A):");

            Console.WriteLine(a.Rank());
            Stopwatch st = new Stopwatch();
            st.Start();
            List<Object> answer = a.SVD();
            st.Stop();
            Console.WriteLine("------------------------------------------------------------\nNeeded time:"
                + st.Elapsed.TotalMilliseconds.ToString() + "ms\n------------------------------------------------------------\n");
            Tensor U = (Tensor)answer[0];
            Tensor V = (Tensor)answer[1];
            Tensor Sigma = (Tensor)answer[2];
            Console.WriteLine("Matrix U: \n" + "------------------------------------------------------------\n"
                + U.ToString() + "\nMatrix V: \n" + "------------------------------------------------------------\n" + V.ToString() + "---------------------------------------------------------\n");
            Console.WriteLine("(Sigma)Matrix with singular values: \n" + Sigma.ToString() + "------------------------------------------------------------\n");
            Tensor sigma = (Tensor)answer[2];
            Tensor new_last = U * Sigma;
            Tensor tmp = new_last * V.Tranpose();
            Console.WriteLine("------------------------------------------------------------\n");
            Console.WriteLine("U*(Sigma)*V^T check\n" + tmp.ToString() + "------------------------------------------------------------\n");
            Console.WriteLine("Difference between U*(Sigma)*V^T and A: \n" + "------------------------------------------------------------\n");
            Console.WriteLine((a - tmp).ToString() + "------------------------------------------------------------\n");
            //List<object> yes = tmp1.Eigen(a,0);
            //Console.ReadLine();
            //a.analitic_SVD();
            
            }
    }
}
